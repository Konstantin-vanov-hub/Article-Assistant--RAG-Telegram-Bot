Article-Assistant--RAG-Telegram-Bot/
â”œâ”€â”€ ðŸ“‚ chroma_db/                    # Chroma vector database storage (local development)
â”œâ”€â”€ ðŸ“‚ chroma_db_new/                # New Chroma database version (migrations/backups)
â”œâ”€â”€ ðŸ“‚ faiss_index/                  # FAISS vector index storage (alternative to Chroma)
â”œâ”€â”€ ðŸ“‚ images/                       # Images for documentation and screenshots
â”œâ”€â”€ ðŸ“‚ __pycache__/                  # Python cache files (auto-generated, ignored in git)
â”œâ”€â”€ ðŸ“‚ .github/                      # GitHub configuration and workflows
â”‚   â”œâ”€â”€ ðŸ“œ pull_request_template.md  # Template for pull requests
â”‚   â”œâ”€â”€ ðŸ“‚ ISSUE_TEMPLATE/           # Issue templates for bug reports and feature requests
â”‚   â”‚   â”œâ”€â”€ ðŸ“œ bug_report.md         # Template for reporting bugs
â”‚   â”‚   â””â”€â”€ ðŸ“œ feature_request.md    # Template for suggesting new features
â”œâ”€â”€ ðŸ“œ .env                          # Environment variables (private - API keys, tokens)
â”œâ”€â”€ ðŸ“œ .env.example                  # Environment template (example for setup)
â”œâ”€â”€ ðŸ“œ .gitignore                    # Git ignore rules (files to exclude from version control)
â”œâ”€â”€ ðŸ“œ LICENSE                       # MIT License file (open source license)
â”œâ”€â”€ ðŸ“œ Link.txt                      # Test URLs/links for development and testing
â”œâ”€â”€ ðŸ“œ .dockerignore                 # Docker ignore rules (files to exclude from Docker builds)
â”œâ”€â”€ ðŸ“œ CODE_OF_CONDUCT.md            # Community code of conduct guidelines
â”œâ”€â”€ ðŸ“œ CONTRIBUTING.md               # Contribution guidelines for developers
â”œâ”€â”€ ðŸ“œ docker-compose.yml            # Docker Compose configuration for multi-container setup
â”œâ”€â”€ ðŸ“œ Dockerfile                    # Docker container build instructions
â”œâ”€â”€ ðŸ“œ project structure             # Project structure notes (this file)
â”œâ”€â”€ ðŸ“œ README.md                     # Project documentation and setup instructions
â”œâ”€â”€ ðŸ“œ requirements.txt              # Python dependencies list (pip install)
â”œâ”€â”€ ðŸ“‚ RAG_bot/                      # Main application package
â”‚   â”œâ”€â”€ ðŸ“œ bot_config.py             # Bot configuration & constants (settings, defaults)
â”‚   â”œâ”€â”€ ðŸ“œ bot_handlers.py           # Telegram bot handlers (message processing logic)
â”‚   â”œâ”€â”€ ðŸ“œ bot_main.py               # Main application entry point (bot startup)
â”‚   â”œâ”€â”€ ðŸ“œ bot_utils.py              # Utility functions (helpers, common utilities)
â”‚   â”œâ”€â”€ ðŸ“œ indexer.py                # Document indexing logic (text processing, chunking)
â”‚   â””â”€â”€ ðŸ“œ Requests.py               # OpenAI API requests handler (API communication)
â”œâ”€â”€ ðŸ“‚ ADD FEEDBACK                  # Adding feedback to the bot
    â”œâ”€â”€ ðŸ“œ INSTRUCTION.md            # Instruction for adding feedback
    â”œâ”€â”€ ðŸ“œ bot_config.py             # New code
    â”œâ”€â”€ ðŸ“œ bot_handlers.py           # New code
    â”œâ”€â”€ ðŸ“œ bot_main.py               # New code
    â”œâ”€â”€ ðŸ“œ bot_utils.py              # New code
    â”œâ”€â”€ ðŸ“œ feedback_analyzer.py      # Feedback analysis